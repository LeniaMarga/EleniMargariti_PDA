"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("mz/fs");
const path_1 = require("path");
function diskUsage(dir) {
    return __awaiter(this, void 0, void 0, function* () {
        let size = 0;
        for (const name of yield fs.readdir(dir)) {
            const sub = path_1.join(dir, name);
            const stat = yield fs.stat(sub);
            if (stat.isDirectory())
                size += yield diskUsage(sub);
            else if (stat.isFile())
                size += stat.size;
        }
        return size;
    });
}
function printDiskUsage(dir) {
    return __awaiter(this, void 0, void 0, function* () {
        console.log(`${dir}: ${yield diskUsage(dir)}`);
    });
}
printDiskUsage(process.cwd())
    .catch(err => { throw err; });
